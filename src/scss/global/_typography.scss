// Base Typography
// ---------------

// Headers
// -------
$header-font-family: $body-font-family !default;
$header-font-weight: $global-weight-normal !default;
$header-font-style: normal !default; // e.g. italic
$header-color: inherit !default;
$header-lineheight: 1.4 !default;
$header-margin-bottom: 0.5rem !default;
$header-text-rendering: optimizeLegibility !default;

// Styles for headings at various screen sizes. Each key is a breakpoint, and each value is a map of heading styles.
// NOTE: size key names are mapped from $mq-breakpoints
$header-styles: (
  small: (
    'h1': ('font-size': 24, 'line-height': 1),
    'h2': ('font-size': 20),
    'h3': ('font-size': 19),
    'h4': ('font-size': 18),
    'h5': ('font-size': 17),
    'h6': ('font-size': 16),
  ),
  medium: (
    'h1': ('font-size': 48, 'line-height': 1.5),
    'h2': ('font-size': 40),
    'h3': ('font-size': 31),
    'h4': ('font-size': 25),
    'h5': ('font-size': 20),
    'h6': ('font-size': 16),
  ),
) !default;

// Mixin for building headers
@mixin header-base {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: $header-font-family;
    font-style: $header-font-style;
    font-weight: $header-font-weight;
    color: $header-color;
    text-rendering: $header-text-rendering;
  }

  // Heading styles
  @each $size, $headers in $header-styles {
    //only make a media query for things above small
    @if $size != $zero-breakpoint {
      @include mq($size) {
        @include build-mapped-styles($headers);
      }
    } @else {
      @include build-mapped-styles($headers);
    }
  }
}

// Mixin for generating styles from header map definitions
@mixin build-mapped-styles($headers) {
  @each $header, $header-defs in $headers {
    $font-size-temp: 1rem;
    #{$header} {
      @each $attr, $val in $header-defs {
        @debug $attr, $val;
        @if ($attr == font-size) {
          $font-size-temp: rem-calc($val);
          font-size: $font-size-temp;
        }

        @if ($attr == line-height) {
          line-height: unitless-calc($val);
        }

        @if ($attr == margin-top) {
          margin-top: rem-calc($val);
        }

        @if ($attr == margin-bottom) {
          margin-bottom: rem-calc($val);
        }
      }
    }
  }
}
