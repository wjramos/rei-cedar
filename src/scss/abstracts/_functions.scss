@function add-empty-bp-maps($bps) {
  $returnMap: ();
  @each $key, $value in $bps {
    $returnMap: map-set($returnMap, #{$key}, ());
  }
  @return $returnMap;
}

@function get-bp($input, $map) {
  // remove leading id (i.e. 'pr-')
  $input: _trim-left($input, $breakpointId);
  // remove last - if there is one
  @if (_ends-with($input, '-')) {
    $input: str-slice($input, 0, (str-length($input) - 1));
  }

  @each $name, $val in $map {
    @if ($input == $name) {
      @return $name;
    }
  }
  @debug 'Nothing matched in breakpoint definitions: \'#{$input}\'';
  @return false;
}

@function generate-style-map($key, $val, $baseMap, $bp, $el:false, $prop:null) {

  // is element specific
  @if ($el) {
    // set up element map if there isn't one
    @if not(map-has-nested-keys($baseMap, #{$bp}, #{$el})) {
      $newElMap: map-deep-set($baseMap, #{$bp}, (#{$el}:()));
      $baseMap: map-deep-merge($baseMap, $newElMap);
    }
    $newMap: map-deep-set($baseMap, #{$bp}, #{$el}, #{$prop}, #{$val});
    $returnMap: map-deep-merge($baseMap, $newMap);
    @return $returnMap;
  }
  // not element specific
  @else {
    $returnMap: map-deep-set($baseMap, #{$bp}, #{$prop}, #{$val});
    @return $returnMap;
  }
}
